name: Bookstore API CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  dev:
    name: Dev
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r bookstore/requirements.txt
      - name: Start FastAPI app
        run: |
          nohup uvicorn bookstore.main:app --host 0.0.0.0 --port 8000 &
          for i in {1..20}; do
            if curl -s http://localhost:8000/health | grep up; then
              echo "FastAPI is up!"
              break
            fi
            sleep 1
          done
      - name: Run Python unit tests (pytest)
        run: |
          pip install pytest
          pytest bookstore/
      - name: Build and test with Maven
        run: mvn clean test
      - name: Generate Allure report
        run: mvn allure:report
      - name: Upload Allure results (raw)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-dev
          path: target/allure-results
      - name: Upload Allure HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-html-report-dev
          path: target/site/allure-maven-plugin

  code_review:
    name: Code Review
    needs: dev
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run code review checks (example: flake8, checkstyle)
        run: |
          pip install flake8
          flake8 bookstore/
          # Add more static analysis or code review tools as needed

  qa:
    name: QA
    needs: code_review
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r bookstore/requirements.txt
      - name: Start FastAPI app
        run: |
          nohup uvicorn bookstore.main:app --host 0.0.0.0 --port 8000 &
          for i in {1..20}; do
            if curl -s http://localhost:8000/health | grep up; then
              echo "FastAPI is up!"
              break
            fi
            sleep 1
          done
      - name: Build and test with Maven
        run: mvn clean test
      - name: Generate Allure report
        run: mvn allure:report
      - name: Upload Allure results (raw)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-qa
          path: target/allure-results
      - name: Upload Allure HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-html-report-qa
          path: target/site/allure-maven-plugin

  prod:
    name: Prod
    needs: qa
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r bookstore/requirements.txt
      - name: Start FastAPI app
        run: |
          nohup uvicorn bookstore.main:app --host 0.0.0.0 --port 8000 &
          for i in {1..20}; do
            if curl -s http://localhost:8000/health | grep up; then
              echo "FastAPI is up!"
              break
            fi
            sleep 1
          done
      - name: Build and test with Maven
        run: mvn clean test
      - name: Generate Allure report
        run: mvn allure:report
      - name: Upload Allure results (raw)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-prod
          path: target/allure-results
      - name: Upload Allure HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-html-report-prod
          path: target/site/allure-maven-plugin
